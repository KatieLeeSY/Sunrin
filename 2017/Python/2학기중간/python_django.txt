※ 9월 3째주 수행평가

1. 가상환경 설치
python -m venv test

2. 가상환경 구동
test\Scripts\activate

3. django 설치
pip install django

4. 프로젝트 생성
django-admin startproject firstproject .

5. 앱 생성
manage.py startapp firstapp

6. DB 반영
manage.py migrate

7. 관리자 계정 생성
manage.py createsuperuser

Username: sunrin20506
Email address: main gmail
Password(8자리이상): [10]

8. 서버 구동
manage.py runserver

Chrome
localhost:8000/admin

9. 페이지 접속
http://127.0.0.1:8000

10. 관리자 페이지 접속
http://127.0.0.1:8000/admin

* 각각의 파일들이 무슨 의미인지 시험 

* firstproject의 urls.py로 사이트어드민 바꿀수있음.
ex. localhost:8000/root

11. 환경설정(settings.py)
fistproject의 settings.py
INSTALLED_APP에서 'firstapp'추가해주기
LANGUAGE_CODE = 'ko'
TIME_ZONE = 'Asia/Seoul'

12. 정적 파일 경로 지정
STATIC_URL = '/static/'
STATIC_ROOT=os.path.join(BASE_DIR, 'static')

13. models.py 클래스 생성
[firstapp > models]
from django.db import models

# Create your models here.

from django.utils import timezone

class Post(models.Model):
    author = models.ForeignKey('auth.User')
    title = models.CharField(max_length=200)
    text = models.TextField()
    created_date = models.DateTimeField(
            default=timezone.now)
    published_date = models.DateTimeField(
            blank=True, null=True)

    def publish(self):
        self.published_date = timezone.now()
        self.save()

    def __str__(self):
        return self.title

class Student(models.Model):
    FRESHMAN = 'FR'
    SOPHOMORE = 'SO'
    JUNIOR = 'JR'
    SENIOR = 'SR'
    YEAR_IN_SCHOOL_CHOICES = (
        (FRESHMAN, 'Freshman'),
        (SOPHOMORE, 'Sophomore'),
        (JUNIOR, 'Junior'),
        (SENIOR, 'Senior'),
    )
    year_in_school = models.CharField(
        max_length=2,
        choices=YEAR_IN_SCHOOL_CHOICES,
        default=FRESHMAN,
    )

    def is_upperclass(self):
        return self.year_in_school in (self.JUNIOR, self.SENIOR)


[firstapp > admin]
from django.contrib import admin
from .models import Post
from .models import Student

admin.site.register(Post)
admin.site.register(Student)

# Register your models here.

14. (앱) DB 파일 생성
manage.py makemigrations firstapp

15. DB 반영
manage.py migrate firstapp

16. 관리자 페이지 포스팅

16_1 : 관리자 페이지 (클래스 인식)

17. 장고 shell 명령
manage.py shell

17_1. 객체 조회하기 
from firstapp.models import Post
Post.objects.all()

17_2. 객체 생성하기
사용자 확인
from django.contrib.auth.models import User
User.objects.all()
내가 이 사람이다
me = User.objects.get(username='sunrin20506')
객체 생성
Post.objects.create(author=me, title='test2', text='test2')

17_3. 객체 조회하기(조건)
특정 사용자
Post.objects.filter(author=me)
글자 검색 (언더바2개!!)
Post.objects.filter(title__contains='te')
시간 검색
1) from django.utils import timezone
2) Post.objects.filter(created_date=timezone.now())
3) Post.objects.filter(published_date=timezone.now())
4) post=Post.objects.get(title='test2')
5) post.publish()
6) Post.objects.filter(published_date__lte=timezone.now())
